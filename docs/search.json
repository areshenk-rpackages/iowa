[{"path":"https://areshenk-rpackages.github.io/iowa/articles/customizing_models.html","id":"important-note","dir":"Articles","previous_headings":"","what":"IMPORTANT NOTE","title":"Adding new models","text":"shift CmdStanR (using instantiate package; opposed RStan) resulted changes model implementation. Recent version CmdStanR seem handle include statements properly models compiled, utility, updating, temperature function modules now included directly within fit_igt.stan, likelihood_igt.stan, simulate_igt.stan model files. explanations remain essentially correct, modifications need made directly function() blocks three model files, rather e.g. utilityWrapper.stan utilityFunctions.stan. wrapper function files remain included package src/stan/include pending resolution issues CmdStanR.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/articles/customizing_models.html","id":"package-structure","dir":"Articles","previous_headings":"","what":"Package structure","title":"Adding new models","text":"Adding new model components (e.g. new utility functions) involves two broad steps: Making component available stan, responsible model simulation fitting. Updating iowa’s internal information model component, including parameter names, bounds, etc. Although actual process adding new component slightly tedious, ultimate goal , added, new component can used package functions (combined components) minimum thought fuss.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/articles/customizing_models.html","id":"internal-package-structure","dir":"Articles","previous_headings":"","what":"Internal package structure","title":"Adding new models","text":"general structure package follows: package interfaces CmdStanR models wrapper functions simulateIGT() fitIGT(). Models implemented src/stan/<modelfile>>.stan. actual component functions (e.g. specific utility function) passed internally data stan model, imported separate .stan file. separate files stored src/stan/include, names e.g. utilityFunctions.stanfunctions. example, src/stan/fitIGT.stan – responsible model fitting – specifies general model follows: trial t, utility outcome evaluated function utility imported src/stan/include/utilityWrapper.stanfunctions, defined Note function just general wrapper calls one several utility functions depending integer argument ind. turn, utility functions defined inst/stan/include/utilityFunctions.stan. example, EU PU utility defined : Note important point: utility functions exactly signature; real win, real loss, array[] real par. package turn contains modelDetails object contained R/sysdata.rda. structure nested list containing information model component; required parameters, necessary (default) bounds. structure list follows: , fields utility, updating, temperature; named list fields corresponding included function. field index indicates corresponding value ind stan wrapper function (e.g. utility(..., ind = 1) chooses EV utility), index within parameter field specifies position parameter par argument. parameter fields also contain entries giving parameter bounds (outside package throw error), well default bounds used model fitting user specify . general structure package program illustrated , using utility function example:","code":"// Likelihood for (t in 1:NUM_TRIALS){      // Compute temperature     theta = temperature(t, temperature_params, TEMPERATURE_FUNCTION);      // Draw card     choice[t] ~ categorical_logit(theta * V);      // Compute utility     U = utility(win[t], loss[t], utility_params, UTILITY_FUNCTION);      // Update deck values     V = updating(V, U, choice[t], updating_params, UPDATING_FUNCTION); } utility(win[t], loss[t], utility_params, UTILITY_FUNCTION); real utility(real win, real loss, array[] real par, int ind){      if (ind == 1){         return utility_EU(win, loss, par);     } else if (ind == 2){         return utility_PU(win, loss, par);     } else if (ind == 3){         return utility_PU2(win, loss, par);     } else {         return 0;     } } // EU utility function (used in EV model) real utility_EU(real win, real loss, array[] real par) {     return (1-par[1]) * win - par[1] * loss; }  // Prospect utility function real utility_PU(real win, real loss, array[] real par) {     real net = win - loss;     if (net >= 0){         return pow(net, par[1]);     } else {         return -par[2] * pow(abs(net), par[1]);     } } modelDetails .  utility . .  EU . . .  index = 1 . . .  pars . . . .  w . . . . .  bounds = c(0,1) . . . . .  default_bounds = c(0, 1) . . . . .  description = \"Win/loss weighting\" . . . . .  index = 1 . .  PU . . .  index = 2 . . .  pars . . . .  A . . . . .  bounds = c(0, Inf) . . . . .  default_bounds = c(0, 1) . . . . .  description = \"Concavity of utility function\" . . . . .  index = 1 . . . .  L . . . . .  bounds = c(0, Inf) . . . . .  default_bounds = c(0, 5) . . . . .  description = \"Loss aversion\" . . . . .  index = 2"},{"path":"https://areshenk-rpackages.github.io/iowa/articles/customizing_models.html","id":"implementing-a-new-model-component","dir":"Articles","previous_headings":"","what":"Implementing a new model component","title":"Adding new models","text":"Adding new utility function iowa now involves following steps: Add function src/stan/include/utilityFunctions.stanfunctions, making sure matches required signature. Add new statement src/stan/include/utilityWrapper.stanfunctions, corresponding next highest value ind. Add new field modelDetails utility field – named unique keyword new utility function – populate necessary fields (.e. one subfield parameter, required fields bounds default_bounds). index field must correspond value ind calls new utility function step (2). Resave modelDetails R/sysdata.rda using save(modelDetails, file = 'R/sysdata.rda'). package recompiled, new utility function ready use. steps adding new updating temperature functions essentially identical, mutatis mutandis.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/articles/deck_structure.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Deck structure","text":"Bechara, ., Damasio, . R., Damasio, H., & Anderson, S. W. (1994). Insensitivity future consequences following damage human prefrontal cortex. Cognition, 50(1-3), 7-15. Lin, C. H., Chiu, Y. C., & Huang, J. T. (2009). Gain-loss frequency final outcome Soochow Gambling Task: reassessment. Behavioral Brain Functions, 5, 1-9.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/articles/model_structure.html","id":"specifying-a-model","dir":"Articles","previous_headings":"","what":"Specifying a model","title":"Model structure","text":"Models implemented iowa require specifying utility, updating, temperature functions. package implements several common versions , based models commonly reported literature. function identified keyword, utility/updating/temperature functions can mixed matched. Detailed information available options given respective articles.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/articles/temperature_functions.html","id":"time-independent-parameters","dir":"Articles","previous_headings":"","what":"Time independent parameters","title":"Temperature functions","text":"Keyword: TIC Parameters: c (Temperature) Bounds: \\(c \\[0,\\infty)\\) \\[ \\theta = 3^c \\]","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/articles/temperature_functions.html","id":"time-dependent-parameters","dir":"Articles","previous_headings":"","what":"Time dependent parameters","title":"Temperature functions","text":"Keyword: TDC Parameters: c (Temperature) Bounds: \\(c \\[0,\\infty)\\) Description: Temperature increases increasing trials. Intended simulate gradual shift exploratory exploitative behavior. \\[ \\theta(t) = \\left ( \\frac{t}{10} \\right )^c \\]","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/articles/updating_functions.html","id":"decay-reinforcement-learning-rule","dir":"Articles","previous_headings":"","what":"Decay reinforcement learning rule","title":"Updating functions","text":"Keyword: DRL Parameters: d (Decay parameter) Bounds: \\(d \\[0,1]\\) Description: Valuation decks decays factor d, chosen deck c updated observed utility u. \\[ v_c(u) = dv_c + \\delta_cu \\]","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/articles/updating_functions.html","id":"delta-learning-rule","dir":"Articles","previous_headings":"","what":"Delta learning rule","title":"Updating functions","text":"Keyword: DEL Parameters: r (Learning rate) Bounds: \\(r \\[0,1]\\) Description: Updates chosen deck using reward prediction error (difference observed expected utility chosen deck) \\[ v_c(u) = v_c + \\delta_c r (u - v_c) \\]","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/articles/updating_functions.html","id":"mixed-learning-rule","dir":"Articles","previous_headings":"","what":"Mixed learning rule","title":"Updating functions","text":"Keyword: ML Parameters: d (Decay parameter), r (Learning rate) Bounds: \\(d \\[0,1]\\), \\(r \\[0,1]\\) Description: Valuation decks decays trial, DRL. chosen deck updated DEL. \\[ v_c(u) = (1-d)v_c + \\delta_c r [u - (1-d)v_c] \\]","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/articles/utility_functions.html","id":"expectance-valence-utility","dir":"Articles","previous_headings":"","what":"Expectance valence utility","title":"Utility functions","text":"Keyword: EU Parameters: w (Win/loss weighting) Bounds: \\(w \\[0,1]\\) Depends: Gain loss \\[ u(g,l) = (1-w)g + wl \\]","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/articles/utility_functions.html","id":"prospect-utility","dir":"Articles","previous_headings":"","what":"Prospect utility","title":"Utility functions","text":"Keyword: PU Parameters: (Concavity), L (Loss aversion) Bounds: \\(\\[0,1]\\), \\(L \\[0, \\infty)\\) Depends: Net outcome \\[ u(x) = \\begin{cases}      x^& x \\geq 0\\\\      -L|x|^& x < 0 \\end{cases}\\]","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/articles/utility_functions.html","id":"alternative-prospect-utility","dir":"Articles","previous_headings":"","what":"Alternative prospect utility","title":"Utility functions","text":"Keyword: PU2 Parameters: (Concavity), L (Loss aversion) Bounds: \\(\\[0,1]\\), \\(L \\[0, \\infty)\\) Depends: Gain loss \\[ u(g,l) = g^- Ll^\\]","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":". Maintainer.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Areshenkoff CN (2024). iowa: Modular reinforcement learning models R. R package version 0.0.1, https://areshenk-rpackages.github.io/iowa/.","code":"@Manual{,   title = {iowa: Modular reinforcement learning models in R},   author = {Corson N. Areshenkoff},   year = {2024},   note = {R package version 0.0.1},   url = {https://areshenk-rpackages.github.io/iowa/}, }"},{"path":"https://areshenk-rpackages.github.io/iowa/index.html","id":"iowa-","dir":"","previous_headings":"","what":"Modular reinforcement learning models of the IGT","title":"Modular reinforcement learning models of the IGT","text":"iowa package implements modular reinforcement learning models Iowa gambling task. Model components implemented Stan, compiled cmdstan models made available internally packages. package implements simulation fitting models constructed mixing matching various utility, updating, temperature functions; designed relatively extensible allowing users implement custom model components. addition simulating performance custom models, iowa also allows model fitting either maximum likelihood / maximum posteriori estimation, full posterior sampling. Currently, single subject fitting supported, support full hierarchical Bayesian fitting strong priority.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Modular reinforcement learning models of the IGT","text":"Models iowa pre-compiled using cmdstanr, must installed alongside cmdstan. can installed within R using iowa can installed directly repository:","code":"remotes::install_github(\"stan-dev/cmdstanr\") cmdstanr::install_cmdstan() devtools::install_github('areshenk-rpackages/iowa', type = 'source')"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForFitting.html","id":null,"dir":"Reference","previous_headings":"","what":"Create list of data for Stan fitting — createStanDataForFitting","title":"Create list of data for Stan fitting — createStanDataForFitting","text":"Create list data Stan fitting","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForFitting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create list of data for Stan fitting — createStanDataForFitting","text":"","code":"createStanDataForFitting(   wins,   losses = NULL,   choices,   numDecks,   utility,   updating,   temperature,   pars = NULL,   reg = 1,   scale = 0.01 )"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForFitting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create list of data for Stan fitting — createStanDataForFitting","text":"wins Vector wins losses Vector losses choices Integer vector deck choices numDecks Integer. Number decks utility Name utility function updating Name updating function temperature Name temperature function pars named list parameters. See details. reg Positive regularization parameter. Beta(reg,reg) prior placed range parameter, larger values reg giving tighter concentration around midpoint interval. Default value 1 gives uniform prior. scale Scaling factor observed outcomes","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForFitting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create list of data for Stan fitting — createStanDataForFitting","text":"list data stan","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForFitting.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create list of data for Stan fitting — createStanDataForFitting","text":"Argument \"pars\" named list fields: \"utility\": named list parameter values. Names must correspond  parameters utility function specified argument \"utility\".  parameter must vector length 2, giving lower upper bounds. \"updating\": See . \"temperature\": See .","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForLikelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Create list of data for Stan likelihood computation — createStanDataForLikelihood","title":"Create list of data for Stan likelihood computation — createStanDataForLikelihood","text":"Create list data Stan likelihood computation","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForLikelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create list of data for Stan likelihood computation — createStanDataForLikelihood","text":"","code":"createStanDataForLikelihood(   wins,   losses,   choices,   numDecks,   utility,   updating,   temperature,   scale )"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForLikelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create list of data for Stan likelihood computation — createStanDataForLikelihood","text":"utility Name utility function updating Name updating function temperature Name temperature function pars named list parameters. See details.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForLikelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create list of data for Stan likelihood computation — createStanDataForLikelihood","text":"list data stan","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForLikelihood.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create list of data for Stan likelihood computation — createStanDataForLikelihood","text":"Argument \"pars\" named list fields: \"utility\": named list parameter values. Names must correspond  parameters utility function specified argument \"utility\". \"updating\": See . \"temperature\": See .","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForSimulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create list of data for Stan simulation — createStanDataForSimulation","title":"Create list of data for Stan simulation — createStanDataForSimulation","text":"Create list data Stan simulation","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForSimulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create list of data for Stan simulation — createStanDataForSimulation","text":"","code":"createStanDataForSimulation(deck, utility, updating, temperature, pars, scale)"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForSimulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create list of data for Stan simulation — createStanDataForSimulation","text":"utility Name utility function updating Name updating function temperature Name temperature function pars named list parameters. See details. decks Names list entries \"wins\" \"losses\"","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForSimulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create list of data for Stan simulation — createStanDataForSimulation","text":"list data stan","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/createStanDataForSimulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create list of data for Stan simulation — createStanDataForSimulation","text":"Argument \"pars\" named list fields: \"utility\": named list parameter values. Names must correspond  parameters utility function specified argument \"utility\". \"updating\": See . \"temperature\": See .","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/fitIGT.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit model to IGT data — fitIGT","title":"Fit model to IGT data — fitIGT","text":"Fit model IGT data either MLE/MAP, full posterior sampling","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/fitIGT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit model to IGT data — fitIGT","text":"","code":"fitIGT(   choices,   wins,   losses = NULL,   numDecks,   utility,   updating,   temperature,   pars = NULL,   scale = 0.01,   reg = 1,   method = \"optimize\",   returnStanobj = F,   ... )"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/fitIGT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit model to IGT data — fitIGT","text":"choices Integer vector deck choices wins Vector wins. net outcomes observed, provided . losses Vector losses. May omitted net outcomes observed. numDecks Integer. Number decks utility Name utility function updating Name updating function temperature Name temperature function pars named list parameters. See details. scale Scaling factor observed outcomes. Typically, outcomes divided 100, corresponding scale = .01 reg Positive regularization parameter. Beta(reg,reg) prior placed range parameter, larger values reg giving tighter concentration around midpoint interval. Default value 1 gives uniform prior. method Either \"optimize\" MAP (MLE reg = 1), \"sample\" full posterior sampling via Stan's -U-Turn-Sampler (NUTS). returnStanobj Whether return full cmdstan object. ... Optional arguments provided cmdstan::optimize() cmdstan::sample()","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/fitIGT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit model to IGT data — fitIGT","text":"list containing either estimated, full posterior samples parameters.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/fitIGT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit model to IGT data — fitIGT","text":"Argument \"pars\" named list fields: \"utility\": named list parameter values. Names must correspond  parameters utility function specified argument \"utility\".  parameter must vector length 2, giving lower upper bounds. \"updating\": See . \"temperature\": See . Note parameters may omitted, case default bounds selected based conventions literature. \"utility\", \"updating\", \"temperature\" missing, default bounds selected parameters. user may pass optional arguments rstan::sampling() rstan::optimizing(). absence arguments, function uses defaults.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/formatLikelihoodOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Organize likelihood generated quantities — formatLikelihoodOutput","title":"Organize likelihood generated quantities — formatLikelihoodOutput","text":"Organize likelihood generated quantities","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/formatLikelihoodOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organize likelihood generated quantities — formatLikelihoodOutput","text":"","code":"formatLikelihoodOutput(draws, paramValues)"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/formatLikelihoodOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Organize likelihood generated quantities — formatLikelihoodOutput","text":"draws draws_array object returned simulate_igt model paramValues draws_array object returned createStanParamsForSimulation()","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/formatLikelihoodOutput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Organize likelihood generated quantities — formatLikelihoodOutput","text":"named list containing log-likelihood provided model parameters","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/formatSimulationOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Organize simulation generated quantities — formatSimulationOutput","title":"Organize simulation generated quantities — formatSimulationOutput","text":"Organize simulation generated quantities","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/formatSimulationOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organize simulation generated quantities — formatSimulationOutput","text":"","code":"formatSimulationOutput(draws, paramValues, deck, scale)"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/formatSimulationOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Organize simulation generated quantities — formatSimulationOutput","text":"draws draws_array object returned simulate_igt model paramValues draws_array object returned createStanParamsForSimulation() deck deck object scale scale factor used simulation","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/formatSimulationOutput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Organize simulation generated quantities — formatSimulationOutput","text":"named list containing simulated IGT data.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/importDeck.html","id":null,"dir":"Reference","previous_headings":"","what":"Import IGT deck structure — importDeck","title":"Import IGT deck structure — importDeck","text":"Import one standard IGT deck structures included iowa package","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/importDeck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import IGT deck structure — importDeck","text":"","code":"importDeck(deck)"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/importDeck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import IGT deck structure — importDeck","text":"deck name included deck (see details)","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/importDeck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import IGT deck structure — importDeck","text":"named list fields \"win\" \"loss\".","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/importDeck.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import IGT deck structure — importDeck","text":"iowa includes several standard IGT deck structures, addition ability user construct . decks named lists fields: wins: numTrial x numDeck matrix gains losses: numTrial x numDeck matrix losses Recall , classic administration IGT, subjects experience gain loss selecting card. cases subject sees net outcome (e.g. prospect utility function), net gain computed internal wins - losses, user can simply place net outcome \"wins\" slot, specify \"losses\" slot matrix zeros. Included decks identified character string: bechara: standard deck structure used Bechara et al. (1994).   Note authors used decks 40 cards, decks provided   contains 100 cards, consisting 2.5 \"copies\" deck. becharavar: variant Bechara deck structure loss   deck C fixed 50, rather varying (25, 50, 75). soochow: alternative deck structure used Chiu et al. (2008)   win/loss frequency symmetric across pairs good bad decks.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/iowa-package.html","id":null,"dir":"Reference","previous_headings":"","what":"iowa: Modular reinforcement learning models for the Iowa gambling task — iowa-package","title":"iowa: Modular reinforcement learning models for the Iowa gambling task — iowa-package","text":"cmdstanr models Iowa gambling task","code":""},{"path":[]},{"path":"https://areshenk-rpackages.github.io/iowa/reference/likelihoodIGT.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute likelihood of an IGT model — likelihoodIGT","title":"Compute likelihood of an IGT model — likelihoodIGT","text":"Likelihood calculation specified model.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/likelihoodIGT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute likelihood of an IGT model — likelihoodIGT","text":"","code":"likelihoodIGT(   wins,   losses,   choices,   numDecks,   utility,   updating,   temperature,   pars,   scale = 0.01 )"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/likelihoodIGT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute likelihood of an IGT model — likelihoodIGT","text":"wins Vector wins losses Vector losses numDecks Number decks updating Name updating function temperature Name temperature function pars named list parameters. See details. scale scale outcomes passing model. Typically, outcomes divided 100 (.e. scale = .01). choice Vector deck choices","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/likelihoodIGT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute likelihood of an IGT model — likelihoodIGT","text":"named list containing simulated IGT data.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/likelihoodIGT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute likelihood of an IGT model — likelihoodIGT","text":"Argument \"pars\" named list fields: \"utility\": named list parameter values. Names must correspond  parameters utility function specified argument \"utility\". \"updating\": See . \"temperature\": See .","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/setStanParamsForSimulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create parameter object for Stan — setStanParamsForSimulation","title":"Create parameter object for Stan — setStanParamsForSimulation","text":"Internal function.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/setStanParamsForSimulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create parameter object for Stan — setStanParamsForSimulation","text":"","code":"setStanParamsForSimulation(utility, updating, temperature, pars)"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/setStanParamsForSimulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create parameter object for Stan — setStanParamsForSimulation","text":"utility Name utility function updating Name updating function temperature Name temperature function pars named list parameters. See details.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/setStanParamsForSimulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create parameter object for Stan — setStanParamsForSimulation","text":"draws_array object stan","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/setStanParamsForSimulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create parameter object for Stan — setStanParamsForSimulation","text":"Argument \"pars\" named list fields: \"utility\": named list parameter values. Names must correspond  parameters utility function specified argument \"utility\". \"updating\": See . \"temperature\": See .","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/simulateIGT.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate performance of an IGT model — simulateIGT","title":"Simulate performance of an IGT model — simulateIGT","text":"Simulate IGT performance using specified model.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/simulateIGT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate performance of an IGT model — simulateIGT","text":"","code":"simulateIGT(   deck = \"bechara\",   n,   utility,   updating,   temperature,   pars,   scale = 0.01 )"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/simulateIGT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate performance of an IGT model — simulateIGT","text":"deck Either name included deck named list matrices entries \"wins\" \"losses\". n Number subjects simulate updating Name updating function temperature Name temperature function pars named list parameters. See details. scale scale outcomes passing model. Typically, outcomes divided 100 (.e. scale = .01). fullOutput Whether output internal state variables (.e. deck valuations)","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/simulateIGT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate performance of an IGT model — simulateIGT","text":"named list containing simulated IGT data.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/simulateIGT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate performance of an IGT model — simulateIGT","text":"Argument \"pars\" named list fields: \"utility\": named list parameter values. Names must correspond  parameters utility function specified argument \"utility\". \"updating\": See . \"temperature\": See .","code":""},{"path":[]},{"path":"https://areshenk-rpackages.github.io/iowa/reference/verifyFittingBounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify provided fitting bounds — verifyFittingBounds","title":"Verify provided fitting bounds — verifyFittingBounds","text":"Internal function. Verify fitting parameters correct, correspond implemented models.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/verifyFittingBounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify provided fitting bounds — verifyFittingBounds","text":"","code":"verifyFittingBounds(utility, updating, temperature, pars = NULL)"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/verifyFittingBounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify provided fitting bounds — verifyFittingBounds","text":"utility Name utility function updating Name updating function temperature Name temperature function pars named list parameters. See details.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/verifyFittingBounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify provided fitting bounds — verifyFittingBounds","text":"Generates error message event incorrect input. Otherwise, returns copy pars, possibly missing bounds set defaults.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/verifyFittingBounds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Verify provided fitting bounds — verifyFittingBounds","text":"Argument \"pars\" named list fields: \"utility\": named list parameter values. Names must correspond  parameters utility function specified argument \"utility\". \"updating\": See . \"temperature\": See .","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/verifyStanParamsForSimulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify provided simulation parameters — verifyStanParamsForSimulation","title":"Verify provided simulation parameters — verifyStanParamsForSimulation","text":"Internal function. Verify simulation parameters correct, correspond implemented models.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/verifyStanParamsForSimulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify provided simulation parameters — verifyStanParamsForSimulation","text":"","code":"verifyStanParamsForSimulation(utility, updating, temperature, pars)"},{"path":"https://areshenk-rpackages.github.io/iowa/reference/verifyStanParamsForSimulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify provided simulation parameters — verifyStanParamsForSimulation","text":"utility Name utility function updating Name updating function temperature Name temperature function pars named list parameters. See details.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/verifyStanParamsForSimulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify provided simulation parameters — verifyStanParamsForSimulation","text":"Nothing. Generates error message event incorrect input.","code":""},{"path":"https://areshenk-rpackages.github.io/iowa/reference/verifyStanParamsForSimulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Verify provided simulation parameters — verifyStanParamsForSimulation","text":"Argument \"pars\" named list fields: \"utility\": named list parameter values. Names must correspond  parameters utility function specified argument \"utility\". \"updating\": See . \"temperature\": See .","code":""}]
